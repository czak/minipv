#!/bin/sh
export TERM=xterm-256color

# This should contain:
# - sniper-runtime/ - extracted sniper runtime images
# - proton/ - proton to be mounted in container
# - home/ - persistent home
DATA=$HOME/.local/share/minipv

# Overrides
OVERRIDES="$(dirname $(readlink -f "$0"))/overrides"

# Compat data folder must exist or proton exits
mkdir -p $DATA/home/steamcompat

args=(
  --clearenv
  --unshare-all

  --size 90000000000 --tmpfs /

  --ro-bind "$DATA/sniper-runtime/files" /usr

  --dev-bind /dev /dev
  --bind /opt /opt
  --proc /proc
  --bind /run/user /run/user
  --bind /srv /srv
  --bind /sys /sys
  --bind /tmp /tmp
  --bind /var /var

  --symlink usr/bin /bin
  --symlink usr/sbin /sbin
  --symlink usr/lib /lib
  --symlink usr/lib32 /lib32
  --symlink usr/lib64 /lib64

  # host
  --ro-bind /usr /run/host/usr

  # /etc
  --ro-bind /etc/fonts /etc/fonts
  --symlink /usr/lib/os-release /etc/os-release

  # fake configs
  --file 11 /etc/passwd
  --file 12 /etc/group
  --file 13 /etc/machine-id

  # env
  --setenv DISPLAY ${DISPLAY:-:0}
  --setenv WAYLAND_DISPLAY ${WAYLAND_DISPLAY:-""}
  --setenv XDG_RUNTIME_DIR ${XDG_RUNTIME_DIR:-/run/user/1000}
  --setenv XDG_DATA_DIRS /overrides/share:/usr/local/share:/usr/share
  --setenv PATH /usr/bin:/bin:/proton

  # user
  --setenv USER ${USER}
  --setenv HOME /home/${USER}
  --bind $DATA/home /home/${USER}
  --bind-try cache /home/${USER}/.cache
  --bind-try config /home/${USER}/.config
  --bind-try local /home/${USER}/.local
  --bind-try users /home/${USER}/steamcompat/pfx/drive_c/users

  # library overrides
  --ro-bind "${OVERRIDES}/etc/ld.so.conf" /etc/ld.so.conf
  --ro-bind "${DATA}/sniper-runtime/files/etc/ld.so.conf.d" /etc/ld.so.conf.d
  --ro-bind /usr/lib/ld-linux-x86-64.so.2 /usr/lib/x86_64-linux-gnu/ld-2.31.so
  --ro-bind /usr/lib32/ld-linux.so.2 /usr/lib/i386-linux-gnu/ld-2.31.so
  --ro-bind /usr/bin/ldd /usr/bin/ldd
  --setenv LD_LIBRARY_PATH /overrides/lib/x86_64-linux-gnu:/overrides/lib/i386-linux-gnu

  # Vulkan
  --ro-bind "${OVERRIDES}/share/vulkan/icd.d/radeon_icd.x86_64.json" /overrides/share/vulkan/icd.d/radeon_icd.x86_64.json
  --ro-bind "${OVERRIDES}/share/vulkan/icd.d/radeon_icd.i686.json" /overrides/share/vulkan/icd.d/radeon_icd.i686.json
  --ro-bind "${OVERRIDES}/share/vulkan/icd.d/intel_icd.x86_64.json" /overrides/share/vulkan/icd.d/intel_icd.x86_64.json
  --ro-bind "${OVERRIDES}/share/vulkan/icd.d/intel_icd.i686.json" /overrides/share/vulkan/icd.d/intel_icd.i686.json

  # Mangohud
  --ro-bind "${OVERRIDES}/share/vulkan/implicit_layer.d/MangoHud.x86_64.json" /overrides/share/vulkan/implicit_layer.d/MangoHud.x86_64.json
  --ro-bind "${OVERRIDES}/share/vulkan/implicit_layer.d/MangoHud.x86.json" /overrides/share/vulkan/implicit_layer.d/MangoHud.x86.json
  --setenv MANGOHUD 1
  # --setenv MANGOHUD_CONFIG full
  --setenv LD_PRELOAD "${LD_PRELOAD}:/run/host/usr/\$LIB/mangohud/libMangoHud_shim.so:libgamemodeauto.so.0"

  # Proton
  --ro-bind "${DATA}/proton" /proton
  --setenv STEAM_COMPAT_CLIENT_INSTALL_PATH ""
  --setenv STEAM_COMPAT_DATA_PATH /home/${USER}/steamcompat
  --setenv SteamGameId 0
  --setenv UMU_ID 0

  # Fix for hotplug controllers inside bubblewrap
  # (udev detection doesn't seem to work with --unshare-net)
  --setenv SDL_JOYSTICK_DISABLE_UDEV 1

  # app
  --bind-try app /home/${USER}/app
)

# Ignore physical controllers if Steam Input device is present
if grep -q "Vendor=28de Product=11ff" /proc/bus/input/devices; then
  echo "Steam Input detected - hiding physical controllers"
  args+=(--setenv SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT "28de:11ff")
else
  echo "No Steam Input - allowing physical controllers"
fi

add_symlink() {
  soname="$1"

  if [ -e "/usr/lib/$soname" ]; then
    args+=(--symlink "/run/host/usr/lib/$soname" "/overrides/lib/x86_64-linux-gnu/$soname")
  else
    echo "Warning: 64-bit $soname not found" >&2
  fi

  if [ -e "/usr/lib32/$soname" ]; then
    args+=(--symlink "/run/host/usr/lib32/$soname" "/overrides/lib/i386-linux-gnu/$soname")
  else
    echo "Warning: 32-bit $soname not found" >&2
  fi
}

add_symlink libanl.so.1
add_symlink libBrokenLocale.so.1
add_symlink libcap.so.2
add_symlink libc.so.6
add_symlink libdbus-1.so.3
add_symlink libdl.so.2
add_symlink libdrm_amdgpu.so.1
add_symlink libdrm_intel.so.1
add_symlink libdrm_nouveau.so.2
add_symlink libdrm_radeon.so.1
add_symlink libdrm.so.2
add_symlink libedit.so.0
add_symlink libEGL_mesa.so.0
add_symlink libEGL.so.1
add_symlink libelf.so.1
add_symlink libexpat.so.1
add_symlink libffi.so.8
add_symlink libgbm.so.1
add_symlink libgcc_s.so.1
add_symlink libGLdispatch.so.0
add_symlink libGLESv2.so.2
add_symlink libGL.so.1
add_symlink libGLX_indirect.so.0
add_symlink libGLX_mesa.so.0
add_symlink libGLX.so.0
add_symlink libicudata.so.76
add_symlink libicuuc.so.76
add_symlink libidn2.so.0
add_symlink liblzma.so.5
add_symlink libmemusage.so
add_symlink libm.so.6
add_symlink libmvec.so.1
add_symlink libncursesw.so.6
add_symlink libnsl.so.1
add_symlink libnss_compat.so.2
add_symlink libnss_db.so.2
add_symlink libnss_dns.so.2
add_symlink libnss_files.so.2
add_symlink libOpenCL.so.1
add_symlink libOpenGL.so.0
add_symlink libpciaccess.so.0
add_symlink libpcprofile.so
add_symlink libpthread.so.0
add_symlink libresolv.so.2
add_symlink librt.so.1
add_symlink libsensors.so.5
add_symlink libSPIRV-Tools.so
add_symlink libstdc++.so.6
add_symlink libsystemd.so.0
add_symlink libthread_db.so.1
add_symlink libudev.so.1
add_symlink libunistring.so.5
add_symlink libutil.so.1
add_symlink libva-drm.so.2
add_symlink libva-glx.so.2
add_symlink libva.so.2
add_symlink libva-x11.so.2
add_symlink libvdpau.so.1
add_symlink libvulkan.so.1
add_symlink libwayland-client.so.0
add_symlink libwayland-server.so.0
add_symlink libX11.so.6
add_symlink libX11-xcb.so.1
add_symlink libXau.so.6
add_symlink libxcb-dri3.so.0
add_symlink libxcb-glx.so.0
add_symlink libxcb-keysyms.so.1
add_symlink libxcb-present.so.0
add_symlink libxcb-randr.so.0
add_symlink libxcb-shm.so.0
add_symlink libxcb.so.1
add_symlink libxcb-sync.so.1
add_symlink libxcb-xfixes.so.0
add_symlink libxcb-xkb.so.1
add_symlink libXdmcp.so.6
add_symlink libXext.so.6
add_symlink libXfixes.so.3
add_symlink libxkbcommon.so.0
add_symlink libxkbcommon-x11.so.0
add_symlink libxml2.so.16
add_symlink libxshmfence.so.1
add_symlink libXxf86vm.so.1
add_symlink libz.so.1
add_symlink libzstd.so.1

# These are version-specific apparently
add_symlink libLLVM.so.20.1
add_symlink libgallium-25.2.1-arch1.1.so

add_symlink libgamemode.so.0
add_symlink libgamemodeauto.so.0

passwd=$(cat <<EOF
${USER}:x:$(id -u):$(id -g)::/home/${USER}:/bin/bash
nobody:x:65534:65534:Nobody:/:/usr/bin/nologin
EOF
)

group=$(cat <<EOF
${USER}:x:$(id -g):
nobody:x:65534:
EOF
)

# Split arguments for bwrap and for exec
# Call with e.g. `minipv --ro-bind thing /thing -- /thing/run.sh --verbose`
bwrap_args=()
exec_cmd=()

while [ "$#" -gt 0 ]; do
  case "$1" in
    --)
      shift
      exec_cmd=("$@")
      break
      ;;
    *)
      bwrap_args+=("$1")
      shift
      ;;
  esac
done

if [ ${#exec_cmd[@]} -eq 0 ]; then
  exec_cmd=("bash")
fi

exec bwrap "${args[@]}" "${bwrap_args[@]}" -- sh -c 'ldconfig && exec "$@"' 'minipv' "${exec_cmd[@]}" \
  11<<< "$passwd" \
  12<<< "$group" \
  13<<< "ffffffffffffffffffffffffffffffff"
